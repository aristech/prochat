# Mattermost rtcd (RTC Server) Configuration
# Place this file in: /etc/nginx/conf.d/rtcd.conf
#
# This proxies HTTPS requests to the rtcd service running locally

# First, check which port is available (8443 or 8444)
# Run: sudo netstat -tulpn | grep :8443
# If 8443 is free, use Option A
# If 8443 is in use, use Option B

# ============================================================================
# OPTION A: Using port 8443 (if available)
# ============================================================================

server {
    listen 8443 ssl http2;
    server_name YOUR_JITSI_DOMAIN.com;  # Replace with your actual domain

    # SSL certificates (reuse your existing Jitsi certificates)
    ssl_certificate /etc/letsencrypt/live/YOUR_JITSI_DOMAIN.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/YOUR_JITSI_DOMAIN.com/privkey.pem;

    # SSL configuration (match your Jitsi settings)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5:!3DES;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;

    # Logging
    access_log /var/log/nginx/rtcd-access.log;
    error_log /var/log/nginx/rtcd-error.log;

    # Proxy to rtcd service (running on localhost:8443)
    location / {
        proxy_pass http://127.0.0.1:8443;
        proxy_http_version 1.1;

        # WebSocket support (required for rtcd)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts for long-lived connections
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60;

        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Health check endpoint
    location /version {
        proxy_pass http://127.0.0.1:8443/version;
        access_log off;
    }
}

# ============================================================================
# OPTION B: Using port 8444 (if 8443 is in use by Jitsi)
# ============================================================================
# Uncomment this section if port 8443 is already in use
# Also update rtcd config to use port 8444

# server {
#     listen 8444 ssl http2;
#     server_name YOUR_JITSI_DOMAIN.com;
#
#     ssl_certificate /etc/letsencrypt/live/YOUR_JITSI_DOMAIN.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/YOUR_JITSI_DOMAIN.com/privkey.pem;
#
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5:!3DES;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-Frame-Options SAMEORIGIN always;
#     add_header X-Content-Type-Options nosniff always;
#
#     access_log /var/log/nginx/rtcd-access.log;
#     error_log /var/log/nginx/rtcd-error.log;
#
#     location / {
#         proxy_pass http://127.0.0.1:8444;  # Note: 8444 instead of 8443
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_read_timeout 86400;
#         proxy_send_timeout 86400;
#         proxy_connect_timeout 60;
#         proxy_buffering off;
#         proxy_request_buffering off;
#     }
#
#     location /version {
#         proxy_pass http://127.0.0.1:8444/version;
#         access_log off;
#     }
# }

# ============================================================================
# Notes:
# ============================================================================
# 1. Replace YOUR_JITSI_DOMAIN.com with your actual domain (e.g., jitsi.progressnet.gr)
# 2. SSL certificates path should match your existing Jitsi setup
# 3. After creating this file, run:
#    - sudo nginx -t (test configuration)
#    - sudo systemctl reload nginx (apply changes)
# 4. Open firewall port:
#    - sudo ufw allow 8443/tcp (or 8444/tcp if using Option B)
# 5. Test: curl https://YOUR_JITSI_DOMAIN.com:8443/version
